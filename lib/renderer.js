// Generated by CoffeeScript 1.6.3
(function() {
  var Renderer;

  module.exports = Renderer = (function() {
    function Renderer(packageName, packageOptions) {
      this.packageName = packageName || "listing";
      this.packageOptions = packageOptions || "";
    }

    Renderer.prototype.em = function(text) {
      return "\\textit{" + text + "}";
    };

    Renderer.prototype.strong = function(text) {
      return "\\textbf{" + text + "}";
    };

    Renderer.prototype.codespan = function(text) {
      return "\\texttt{" + text + "}";
    };

    Renderer.prototype.br = function(text) {
      return "" + text + "\n";
    };

    Renderer.prototype.del = function(text) {
      return text;
    };

    Renderer.prototype.link = function(href, title, text) {
      return "\\url{" + href + "}";
    };

    Renderer.prototype.image = function(href, title, text) {
      return "";
    };

    Renderer.prototype.code = function(code, language) {
      return "\\begin{" + this.packageName + "}" + "\n" + code + "\n\\end{" + this.packageName + "}\n\n";
    };

    Renderer.prototype.paragraph = function(text) {
      return "" + text + "\n\n";
    };

    Renderer.prototype.html = function(html) {
      return html;
    };

    Renderer.prototype.heading = function(text, level) {
      var headingMap;
      if (level < 1 || level > 5) {
        return "" + text + "\n\n";
      }
      headingMap = ["\\section{" + text + "}", "\\subsection{" + text + "}", "\\subsubsection{" + text + "}", "\\paragraph{" + text + "}", "\\subparagraph{" + text + "}"];
      return headingMap[level - 1] + "\n\n";
    };

    Renderer.prototype.hr = function() {
      return "\\pagebreak\n\n";
    };

    Renderer.prototype.list = function(body, ordered) {
      if (ordered) {
        return "\\begin{enumerate}\n" + body + "\\end{enumerate}\n\n";
      } else {
        return "\\begin{itemize}\n" + body + "\\end{itemize}\n\n";
      }
    };

    Renderer.prototype.listitem = function(text) {
      return "\\item " + text + "\n";
    };

    Renderer.prototype.table = function(header, body) {
      return "" + header + body + "\n\n";
    };

    Renderer.prototype.tablerow = function(content) {
      return content;
    };

    Renderer.prototype.tablecell = function(content, flags) {
      return content;
    };

    return Renderer;

  })();

}).call(this);
